AWSTemplateFormatVersion: 2010-09-09
Description: >
  Template to deploy a lambda which is triggered by an S3 event.

Parameters:
  BucketNameRawData:
    Type: String
    Description: Enter the name of S3 bucket you wish to create.
    Default: delon9-daily-grind-raw-data2
  BucketTransformedData:
    Type: String
    Description: Enter the name of S3 bucket you wish to create.
    Default: delon9-daily-grind-transformed-data
  ETLQueue:
    Type: String
    Description: Enter the name of S3 bucket you wish to create.
    Default: daily-grind-queue2
  VpcSubnetId:
    Type: String
    Description: The Redshift private subnet id
    Default: subnet-01e8ba9e7640e0f56
  SecurityGroupId:
    Type: String
    Description: The Redshift security group id
    Default: sg-0e6c507aa8ae2a367


Resources:
  Extracttransformlambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: Daily-Grind-Extract-CSV2 #name of the lambda function
      Runtime: python3.10
      Handler: lambda_function.lambda_handler #(e.g. app.main.lambda_handler)path in AWS maybe Database.lambda_function.lambda_handler
      Role: arn:aws:iam::015206308301:role/lambda-execution-role
      Timeout: 300
      ReservedConcurrentExecutions: 1
      Code: ./ #we are referencing to the source folder and stay in the template, or ./Database
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds:
          - !Ref VpcSubnetId

  Tablesschemalambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: Daily-Grind-Tablesschemalambda #name of the lambda function
      Runtime: python3.10
      Handler: lambda_function_tables.lambda_handler #(e.g. app.main.lambda_handler)path in AWS maybe Database.lambda_function.lambda_handler
      Role: arn:aws:iam::015206308301:role/lambda-execution-role
      Timeout: 300
      ReservedConcurrentExecutions: 1
      Code: ./ #we are referencing to the source folder and stay in the template, or ./Database
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds:
          - !Ref VpcSubnetId


  Loadlambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: Daily-Grind-LoadtoRedshift #name of the lambda function
      Runtime: python3.10
      Handler: lambda_function_load.lambda_handler #(e.g. app.main.lambda_handler)path in AWS maybe Database.lambda_function.lambda_handler
      Role: arn:aws:iam::015206308301:role/lambda-execution-role
      Timeout: 900
      ReservedConcurrentExecutions: 1
      Code: ./ #we are referencing to the source folder and stay in the template, or ./Database
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds:
          - !Ref VpcSubnetId


  S3Bucket: #Create an S3 bucket for the raw data
    Type: 'AWS::S3::Bucket'
    DependsOn:
      - S3BucketPermission
    Properties:
      BucketName: !Ref BucketNameRawData
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt Extracttransformlambda.Arn

  S3BucketPermission: #invoke a lambda,this is the same when we setup a trigger in AWS to deploy a lamda function
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !Ref Extracttransformlambda
      Principal: s3.amazonaws.com
      SourceArn: !Sub "arn:aws:s3:::${BucketNameRawData}" 

  # S3Bucketfortransformdata: 
  #   Type: 'AWS::S3::Bucket'
  #   DependsOn:
  #     - S3BucketPermission
  #   Properties:
  #     BucketName: !Ref BucketTransformedData
  #     NotificationConfiguration:
  #       LambdaConfigurations:
  #         - Event: s3:ObjectCreated:*
  #           Function: !GetAtt Extracttransformlambda.Arn

  Queue: 
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: !Ref ETLQueue
      DelaySeconds: 0
      VisibilityTimeout: 120

  QueuePermission: #invoke a lambda,this is the same when we setup a trigger in AWS to deploy a lamda function
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !Ref Loadlambda
      Principal: sqs.amazonaws.com
      SourceArn: !Sub "arn:aws:sqs:::${ETLQueue}" 
